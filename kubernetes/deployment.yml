apiVersion: apps/v1
kind: Deployment
metadata:
  name: flightbook
  labels:
    app: flightbook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flightbook
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: flightbook
    spec:
      containers:
        - name: flightbook
          env:
            - name: JWT_SECRET
              value: ${{ secrets.DEV_JWT_SECRET }}
            - name: DATABASE_HOST
              value: ${{ secrets.DEV_DATABASE_HOST }}
            - name: DATABASE_NAME
              value: ${{ secrets.DEV_DATABASE_NAME }}
            - name: DATABASE_PASSWORD
              value: ${{ secrets.DEV_DATABASE_PASSWORD }}
            - name: DATABASE_PORT
              value: ${{ secrets.DEV_DATABASE_PORT }}
            - name: DATABASE_USER
              value: ${{ secrets.DEV_DATABASE_USER }}
            - name: EMAIL_AUTHORIZATION
              value: ${{ secrets.DEV_EMAIL_AUTHORIZATION }}
            - name: TOKEN_EXPIRATION
              value: ${{ secrets.DEV_TOKEN_EXPIRATION }}
          image: <IMAGE>
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "0.2"
              memory: "512Mi"
            limits:
              cpu: "0.4"
              memory: "1Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: flightbook-service
spec:
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: flightbook
